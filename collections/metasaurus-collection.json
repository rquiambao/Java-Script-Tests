{
  "info": {
    "_postman_id": "76595a64-a109-444e-afb7-74b75e031cf9",
    "name": "Metasaurus",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Meta All example",
      "item": [
        {
          "name": "/colleges",
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "http://{{services_meta_host}}/colleges?city=Los-Angeles&state=California&application=rent&disableCache={{disableCache}}",
              "protocol": "http",
              "host": [
                "{{services_meta_host}}"
              ],
              "path": [
                "colleges"
              ],
              "query": [
                {
                  "key": "city",
                  "value": "Los-Angeles"
                },
                {
                  "key": "state",
                  "value": "California"
                },
                {
                  "key": "application",
                  "value": "rent"
                },
                {
                  "key": "disableCache",
                  "value": "{{disableCache}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "/community",
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "http://{{services_meta_host}}/community?city=Atlanta&state=Georgia&lat=33.8371&lng=-84.3762&zip=30305&rectype=ZI&application=rentals&disableCache={{disableCache}}",
              "protocol": "http",
              "host": [
                "{{services_meta_host}}"
              ],
              "path": [
                "community"
              ],
              "query": [
                {
                  "key": "city",
                  "value": "Atlanta"
                },
                {
                  "key": "state",
                  "value": "Georgia"
                },
                {
                  "key": "lat",
                  "value": "33.8371"
                },
                {
                  "key": "lng",
                  "value": "-84.3762"
                },
                {
                  "key": "zip",
                  "value": "30305"
                },
                {
                  "key": "rectype",
                  "value": "ZI"
                },
                {
                  "key": "application",
                  "value": "rentals"
                },
                {
                  "key": "disableCache",
                  "value": "{{disableCache}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "/community NH",
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "http://{{services_meta_host}}/community?rectype=NH&neighborhood=Buckhead-Triangle&lat=33.846472&lng=-84.377634&rad=1.0&state=Georgia&hood=Buckhead-Triangle&city=Atlanta&disableCache={{disableCache}}",
              "protocol": "http",
              "host": [
                "{{services_meta_host}}"
              ],
              "path": [
                "community"
              ],
              "query": [
                {
                  "key": "rectype",
                  "value": "NH"
                },
                {
                  "key": "neighborhood",
                  "value": "Buckhead-Triangle"
                },
                {
                  "key": "lat",
                  "value": "33.846472"
                },
                {
                  "key": "lng",
                  "value": "-84.377634"
                },
                {
                  "key": "rad",
                  "value": "1.0"
                },
                {
                  "key": "state",
                  "value": "Georgia"
                },
                {
                  "key": "hood",
                  "value": "Buckhead-Triangle"
                },
                {
                  "key": "city",
                  "value": "Atlanta"
                },
                {
                  "key": "disableCache",
                  "value": "{{disableCache}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "/docs",
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "http://{{services_meta_host}}/docs",
              "protocol": "http",
              "host": [
                "{{services_meta_host}}"
              ],
              "path": [
                "docs"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Metrics",
      "item": [
        {
          "name": "Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "http://{{services_meta_host}}/metrics",
              "protocol": "http",
              "host": [
                "{{services_meta_host}}"
              ],
              "path": [
                "metrics"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "V3",
      "item": [
        {
          "name": "Geo",
          "item": [
            {
              "name": "/v3/geo?",
              "item": [
                {
                  "name": "AG",
                  "item": [
                    {
                      "name": "By state",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "84666417-2085-4769-9d2b-cce1a01a9931",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var search = jsonData.search;",
                              "    var location = jsonData.location;",
                              "    ",
                              "    pm.expect(search.hasOwnProperty('endecaId')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('pageSize')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('path')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('resultsMatchQuery')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('searchCityState')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('type')).to.be.true;",
                              "",
                              "    pm.expect(location.hasOwnProperty('isIndexable')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('geoId')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('marketCodes')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('state')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('boundingBox')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?state=Georgia&application=ag&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "city",
                              "value": "Duluth",
                              "disabled": true
                            },
                            {
                              "key": "state",
                              "value": "Georgia"
                            },
                            {
                              "key": "application",
                              "value": "ag"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        },
                        "description": "Lookup city geo information by city and state."
                      },
                      "response": []
                    },
                    {
                      "name": "By city and state",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "84666417-2085-4769-9d2b-cce1a01a9931",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var search = jsonData.search;",
                              "    var location = jsonData.location;",
                              "    ",
                              "    pm.expect(search.hasOwnProperty('endecaId')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('pageSize')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('path')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('resultsMatchQuery')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('searchCityState')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('type')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('radiusInMiles')).to.be.true;",
                              "",
                              "",
                              "    pm.expect(location.hasOwnProperty('isIndexable')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('geoId')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('marketCodes')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('state')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('boundingBox')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?city=Duluth&state=Georgia&application=ag&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "city",
                              "value": "Duluth"
                            },
                            {
                              "key": "state",
                              "value": "Georgia"
                            },
                            {
                              "key": "application",
                              "value": "ag"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        },
                        "description": "Lookup city geo information by city and state."
                      },
                      "response": []
                    },
                    {
                      "name": "By geoname",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "84666417-2085-4769-9d2b-cce1a01a9931",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var search = jsonData.search;",
                              "    var location = jsonData.location;",
                              "    ",
                              "    pm.expect(search.hasOwnProperty('endecaId')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('pageSize')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('path')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('resultsMatchQuery')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('type')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('radiusInMiles')).to.be.true;",
                              "    ",
                              "    pm.expect(location.hasOwnProperty('isIndexable')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('geoId')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('marketCodes')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('state')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?geoname=Duluth&application=ag&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "geoname",
                              "value": "Duluth"
                            },
                            {
                              "key": "application",
                              "value": "ag"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        },
                        "description": "Lookup city geo information by city and state."
                      },
                      "response": []
                    },
                    {
                      "name": "By city, state, and neighborhood",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "18b9d060-0816-4a0f-a4ad-ab3db08b3c5c",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var search = jsonData.search;",
                              "    var location = jsonData.location;",
                              "    ",
                              "    pm.expect(search.hasOwnProperty('endecaId')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('pageSize')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('path')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('resultsMatchQuery')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('searchCityState')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('type')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('radiusInMiles')).to.be.true;",
                              "",
                              "    ",
                              "    pm.expect(location.hasOwnProperty('isIndexable')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('geoId')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('marketCodes')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('state')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?city=atlanta&state=georgia&hood=buckhead&application=ag&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "city",
                              "value": "atlanta"
                            },
                            {
                              "key": "state",
                              "value": "georgia"
                            },
                            {
                              "key": "hood",
                              "value": "buckhead"
                            },
                            {
                              "key": "application",
                              "value": "ag"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        },
                        "description": "Lookup by city, state and neighborhood."
                      },
                      "response": []
                    },
                    {
                      "name": "By latitude and longitude",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "927526e3-1f17-49ba-84a6-506952a396bd",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var search = jsonData.search;",
                              "    var location = jsonData.location;",
                              "    ",
                              "    pm.expect(search.hasOwnProperty('endecaId')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('pageSize')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('path')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('resultsMatchQuery')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('searchCityState')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('type')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('radiusInMiles')).to.be.true;",
                              "",
                              "    ",
                              "    pm.expect(location.hasOwnProperty('isIndexable')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('geoId')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('marketCodes')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('state')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?lat=35.8058377&lng=-78.6260479&application=ag&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "lat",
                              "value": "35.8058377"
                            },
                            {
                              "key": "lng",
                              "value": "-78.6260479"
                            },
                            {
                              "key": "application",
                              "value": "ag"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        },
                        "description": "Lookup by latitude and longitude."
                      },
                      "response": []
                    },
                    {
                      "name": "No query parameters",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "84666417-2085-4769-9d2b-cce1a01a9931",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is empty\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    pm.expect(Object.keys(jsonData).length).to.eq(0);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?application=ag&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "city",
                              "value": "Duluth",
                              "disabled": true
                            },
                            {
                              "key": "state",
                              "value": "Georgia",
                              "disabled": true
                            },
                            {
                              "key": "application",
                              "value": "ag"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        },
                        "description": "Lookup city geo information by city and state."
                      },
                      "response": []
                    },
                    {
                      "name": "By locationSlug query parameter",
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?application=ag&locationSlug=schools/Kentucky/districts/Fulton-County-Schools-2102100&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "application",
                              "value": "ag"
                            },
                            {
                              "key": "locationSlug",
                              "value": "schools/Kentucky/districts/Fulton-County-Schools-2102100"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "name": "MAG",
                  "item": [
                    {
                      "name": "By geoname",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "84666417-2085-4769-9d2b-cce1a01a9931",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var search = jsonData.search;",
                              "    var location = jsonData.location;",
                              "    ",
                              "    pm.expect(search.hasOwnProperty('endecaId')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('pageSize')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('path')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('resultsMatchQuery')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('type')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('radiusInMiles')).to.be.true;",
                              "    ",
                              "    pm.expect(location.hasOwnProperty('isIndexable')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('geoId')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('marketCodes')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('state')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?geoname=Duluth&application=mag&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "geoname",
                              "value": "Duluth"
                            },
                            {
                              "key": "application",
                              "value": "mag"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        },
                        "description": "Lookup city geo information by city and state."
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Rent",
                  "item": [
                    {
                      "name": "By city and state",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "84666417-2085-4769-9d2b-cce1a01a9931",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var search = jsonData.search;",
                              "    var location = jsonData.location;",
                              "    ",
                              "    pm.expect(search.hasOwnProperty('endecaId')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('pageSize')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('path')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('resultsMatchQuery')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('type')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('radiusInMiles')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('radius')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('sort')).to.be.true;",
                              "    ",
                              "    pm.expect(location.hasOwnProperty('isIndexable')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('geoId')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('marketCodes')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('state')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('geoUrl')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('useForNearby')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?city=Duluth&state=Georgia&application=rent&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "city",
                              "value": "Duluth"
                            },
                            {
                              "key": "state",
                              "value": "Georgia"
                            },
                            {
                              "key": "application",
                              "value": "rent"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        },
                        "description": "Lookup city geo information by city and state."
                      },
                      "response": []
                    },
                    {
                      "name": "By geoname",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "84666417-2085-4769-9d2b-cce1a01a9931",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var search = jsonData.search;",
                              "    var location = jsonData.location;",
                              "    ",
                              "    pm.expect(search.hasOwnProperty('endecaId')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('pageSize')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('path')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('resultsMatchQuery')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('type')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('radiusInMiles')).to.be.true;",
                              "    ",
                              "    pm.expect(location.hasOwnProperty('isIndexable')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('geoId')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('marketCodes')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('state')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?geoname=Duluth&application=rent&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "geoname",
                              "value": "Duluth"
                            },
                            {
                              "key": "application",
                              "value": "rent"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        },
                        "description": "Lookup city geo information by city and state."
                      },
                      "response": []
                    },
                    {
                      "name": "State",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "1c56fc6f-2c9f-46d9-ad93-822db9953df2",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var search = jsonData.search;",
                              "    var location = jsonData.location;",
                              "    ",
                              "    pm.expect(search.hasOwnProperty('endecaId')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('pageSize')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('path')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('resultsMatchQuery')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('type')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('radiusInMiles')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('radius')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('sort')).to.be.true;",
                              "    ",
                              "    pm.expect(location.hasOwnProperty('isIndexable')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('geoId')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('marketCodes')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('state')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('geoUrl')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('useForNearby')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?state=ma&city=newtonville&application=rent&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "state",
                              "value": "ma"
                            },
                            {
                              "key": "city",
                              "value": "newtonville"
                            },
                            {
                              "key": "application",
                              "value": "rent"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}\n"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "By city and state",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "ced8214b-5fd2-4bd3-9593-7d65b7e0483e",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var search = jsonData.search;",
                              "    var location = jsonData.location;",
                              "    ",
                              "    pm.expect(search.hasOwnProperty('endecaId')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('pageSize')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('path')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('resultsMatchQuery')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('searchCityState')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('radiusInMiles')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('type')).to.be.true;",
                              "    ",
                              "    pm.expect(location.hasOwnProperty('isIndexable')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('geoId')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('marketCodes')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('state')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?city=Dobbins-Arb&state=Georgia&application=rent&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "city",
                              "value": "Dobbins-Arb"
                            },
                            {
                              "key": "state",
                              "value": "Georgia"
                            },
                            {
                              "key": "application",
                              "value": "rent"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        },
                        "description": "Lookup by city and state."
                      },
                      "response": []
                    },
                    {
                      "name": "By city, state, and neighborhood",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "18b9d060-0816-4a0f-a4ad-ab3db08b3c5c",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var search = jsonData.search;",
                              "    var location = jsonData.location;",
                              "    ",
                              "    pm.expect(search.hasOwnProperty('endecaId')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('pageSize')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('path')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('resultsMatchQuery')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('searchCityState')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('radiusInMiles')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('type')).to.be.true;",
                              "    ",
                              "    pm.expect(location.hasOwnProperty('isIndexable')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('geoId')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('marketCodes')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('state')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?city=atlanta&state=georgia&hood=buckhead&application=rent&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "city",
                              "value": "atlanta"
                            },
                            {
                              "key": "state",
                              "value": "georgia"
                            },
                            {
                              "key": "hood",
                              "value": "buckhead"
                            },
                            {
                              "key": "application",
                              "value": "rent"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        },
                        "description": "Lookup by city, state and neighborhood."
                      },
                      "response": []
                    },
                    {
                      "name": "By state, city, and submarket",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "51d87388-939a-4ce9-9c64-251f57ba2f4a",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var search = jsonData.search;",
                              "    var location = jsonData.location;",
                              "    ",
                              "    pm.expect(search.hasOwnProperty('endecaId')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('pageSize')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('path')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('resultsMatchQuery')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('searchCityState')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('radiusInMiles')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('type')).to.be.true;",
                              "    ",
                              "    pm.expect(location.hasOwnProperty('isIndexable')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('geoId')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('marketCodes')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('state')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?city=ball-ground&state=georgia&submarket_nb=11716&limit=1&application=rent&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "city",
                              "value": "ball-ground"
                            },
                            {
                              "key": "state",
                              "value": "georgia"
                            },
                            {
                              "key": "submarket_nb",
                              "value": "11716"
                            },
                            {
                              "key": "limit",
                              "value": "1"
                            },
                            {
                              "key": "application",
                              "value": "rent"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        },
                        "description": "Lookup by state, city, and submarket."
                      },
                      "response": []
                    },
                    {
                      "name": "By schoolid",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "27bc45ac-a9cf-4f72-88d5-04944499eb0f",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var search = jsonData.search;",
                              "    var location = jsonData.location;",
                              "    ",
                              "    pm.expect(search.hasOwnProperty('endecaId')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('pageSize')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('path')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('resultsMatchQuery')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('searchCityState')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('radiusInMiles')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('type')).to.be.true;",
                              "    ",
                              "    pm.expect(location.hasOwnProperty('isIndexable')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('geoId')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('marketCodes')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('state')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?schoolId=370150000607&application=rent&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "schoolId",
                              "value": "370150000607"
                            },
                            {
                              "key": "application",
                              "value": "rent"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        },
                        "description": "Lookup by school ID."
                      },
                      "response": []
                    },
                    {
                      "name": "By zipcode",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "2cc512ea-cae8-4755-b17b-1948edf03c6d",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var search = jsonData.search;",
                              "    var location = jsonData.location;",
                              "    ",
                              "    pm.expect(search.hasOwnProperty('endecaId')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('pageSize')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('path')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('resultsMatchQuery')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('searchCityState')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('radiusInMiles')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('type')).to.be.true;",
                              "    ",
                              "    pm.expect(location.hasOwnProperty('isIndexable')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('geoId')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('marketCodes')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('state')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?zip=30092&disableCache={{disableCache}}&application=rent",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "zip",
                              "value": "30092"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            },
                            {
                              "key": "application",
                              "value": "rent"
                            }
                          ]
                        },
                        "description": "Lookup by Zipcode."
                      },
                      "response": []
                    },
                    {
                      "name": "By latitude and longitude",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "927526e3-1f17-49ba-84a6-506952a396bd",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var search = jsonData.search;",
                              "    var location = jsonData.location;",
                              "    ",
                              "    pm.expect(search.hasOwnProperty('endecaId')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('pageSize')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('path')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('resultsMatchQuery')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('searchCityState')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('radiusInMiles')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('type')).to.be.true;",
                              "    ",
                              "    pm.expect(location.hasOwnProperty('isIndexable')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('geoId')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('marketCodes')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('state')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?lat=35.8058377&lng=-78.6260479&application=rent&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "lat",
                              "value": "35.8058377"
                            },
                            {
                              "key": "lng",
                              "value": "-78.6260479"
                            },
                            {
                              "key": "application",
                              "value": "rent"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        },
                        "description": "Lookup by latitude and longitude."
                      },
                      "response": []
                    },
                    {
                      "name": "By bounding box",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "927526e3-1f17-49ba-84a6-506952a396bd",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var search = jsonData.search;",
                              "    var location = jsonData.location;",
                              "    ",
                              "    pm.expect(search.hasOwnProperty('endecaId')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('pageSize')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('path')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('resultsMatchQuery')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('searchCityState')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('radiusInMiles')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('type')).to.be.true;",
                              "    ",
                              "    pm.expect(location.hasOwnProperty('isIndexable')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('geoId')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('marketCodes')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('state')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?application=rent&bbox=-97.309506,30.580296,-95.656246,28.454978&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "application",
                              "value": "rent"
                            },
                            {
                              "key": "bbox",
                              "value": "-97.309506,30.580296,-95.656246,28.454978"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        },
                        "description": "Lookup by latitude and longitude."
                      },
                      "response": []
                    },
                    {
                      "name": "Zip with searchCityStateCount for Rent",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "e1cdc345-5e18-41b2-a5dc-f1eb525a12b1",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var search = jsonData.search;",
                              "    var location = jsonData.location;",
                              "    ",
                              "    pm.expect(search.hasOwnProperty('endecaId')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('pageSize')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('path')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('resultsMatchQuery')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('searchCityState')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('radiusInMiles')).to.be.true;",
                              "    pm.expect(search.hasOwnProperty('type')).to.be.true;",
                              "    ",
                              "    pm.expect(location.hasOwnProperty('isIndexable')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('geoId')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('marketCodes')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(location.hasOwnProperty('state')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?zip=30092&application=rent&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "zip",
                              "value": "30092"
                            },
                            {
                              "key": "application",
                              "value": "rent"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "By locationSlug query parameter",
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/geo?application=rent&locationSlug=california/schools/fullerton-elementary-school-district-0614730&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "geo"
                          ],
                          "query": [
                            {
                              "key": "application",
                              "value": "rent"
                            },
                            {
                              "key": "locationSlug",
                              "value": "california/schools/fullerton-elementary-school-district-0614730"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "description": "The /geo route",
              "_postman_isSubFolder": true
            },
            {
              "name": "Schools",
              "item": [
                {
                  "name": "AG",
                  "item": [
                    {
                      "name": "Multiple Schools- application, rectype etc",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d4858772-92c2-4d3e-adad-ea5f57f8d2f3",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var schools = jsonData.entities.schools;",
                              "    var school = schools[0];",
                              "    ",
                              "    pm.expect(schools.length).to.be.gt(3);",
                              "    ",
                              "",
                              "    pm.expect(school.hasOwnProperty('endecaId')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('displayName')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('id')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('milesToGeoCode')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/schools?lat=36.080300&lng=-80.174500&rad=30&limit=30&application=ag&rectype=GEO&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "schools"
                          ],
                          "query": [
                            {
                              "key": "lat",
                              "value": "36.080300"
                            },
                            {
                              "key": "lng",
                              "value": "-80.174500"
                            },
                            {
                              "key": "rad",
                              "value": "30"
                            },
                            {
                              "key": "limit",
                              "value": "30"
                            },
                            {
                              "key": "application",
                              "value": "ag"
                            },
                            {
                              "key": "rectype",
                              "value": "GEO"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        },
                        "description": "Lookup multiple schools by IDs."
                      },
                      "response": []
                    },
                    {
                      "name": "Multiple Schools",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c606cd11-9ab6-4be2-af18-59ddcc47235c",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var schools = jsonData.entities.schools;",
                              "    var school = schools[0];",
                              "    ",
                              "    pm.expect(schools.length).to.eq(3);",
                              "    ",
                              "    var districts = jsonData.entities.schoolDistricts;",
                              "    ",
                              "    pm.expect(school.hasOwnProperty('address')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRatingCount')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('districtIds')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('grade')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('greatSchoolsLink')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('id')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('milesToGeoCode')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('overallRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('phone')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('rectype')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('stateAbbrev')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('subtypes')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('type')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('zip')).to.be.true;",
                              "    ",
                              "    pm.expect(districts.hasOwnProperty('1302280')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/schools?schoolIds=130228002190,130228002493,130228002560&disableCache={{disableCache}}&application=ag",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "schools"
                          ],
                          "query": [
                            {
                              "key": "schoolIds",
                              "value": "130228002190,130228002493,130228002560"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            },
                            {
                              "key": "application",
                              "value": "ag"
                            }
                          ]
                        },
                        "description": "Lookup multiple schools by IDs."
                      },
                      "response": []
                    },
                    {
                      "name": "School Route",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "64d74377-2a96-4e52-955f-223fc3c22e6d",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var schools = jsonData.entities.schools;",
                              "    var school = schools[0];",
                              "    ",
                              "    pm.expect(schools.length).to.be.gt(3);",
                              "    pm.expect(schools.length).to.be.lt(30);",
                              "    ",
                              "    pm.expect(school.hasOwnProperty('address')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRatingCount')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('districtIds')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('grade')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('greatSchoolsLink')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('id')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('milesToGeoCode')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('overallRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('phone')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('rectype')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('stateAbbrev')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('subtypes')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('type')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('zip')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/schools?lat=34.055900&lng=-84.17170&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "schools"
                          ],
                          "query": [
                            {
                              "key": "lat",
                              "value": "34.055900"
                            },
                            {
                              "key": "lng",
                              "value": "-84.17170"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Schools within a district",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "46c3552e-25ec-4fb9-9ac1-4890b21a11cd",
                            "exec": [
                              "pm.test('Status code is 200', () => pm.response.to.have.status(200));",
                              "",
                              "const schema = {",
                              "    type: 'object',",
                              "    properties: {",
                              "            required: ['entities'],",
                              "            entities: {",
                              "            type: 'object',",
                              "            properties: {",
                              "                schools: {",
                              "                    type: 'array',",
                              "                    items: {",
                              "                        type: 'object',",
                              "                        properties: {",
                              "                            address: { type: 'string' },",
                              "                            averageRating: { type: ['null', 'string'] },",
                              "                            averageRatingCount: { type: ['null', 'string'] },",
                              "                            city: { type: 'string' },",
                              "                            districtIds: {",
                              "                                type: 'array',",
                              "                                items: { type: 'string' }",
                              "                            },",
                              "                            grade: { type: ['null', 'string'] },",
                              "                            greatSchoolsLink: { type: ['null', 'string'] },",
                              "                            id: { type: 'string' },",
                              "                            lat: { type: ['null', 'number'] },",
                              "                            lng: { type: ['null', 'number'] },",
                              "                            milesToGeoCode: { type: ['null', 'number'] },",
                              "                            name: { type: ['null', 'string'] },",
                              "                            overallRating: { type: ['null', 'string'] },",
                              "                            phone: { type: ['null', 'string'] },",
                              "                            rectype: { type: ['null', 'string'] },",
                              "                            stateAbbrev: { type: ['null', 'string'] },",
                              "                            subtypes: {",
                              "                                type: 'array',",
                              "                                items: { type: 'string' }",
                              "                            },",
                              "                            type: { type: ['null', 'string'] },",
                              "                            zip: { type: ['null', 'string'] }",
                              "                        }",
                              "                    }",
                              "                },",
                              "                schoolDistricts: {",
                              "                    type: 'object',",
                              "                    properties: {",
                              "                        1302280: { type: 'object' },",
                              "                        properties:{",
                              "                            description: { type: ['null', 'string'] },",
                              "                            id: { type: 'string' },",
                              "                            name: { type: ['null', 'string'] },",
                              "                            phone: { type: ['null', 'string'] },",
                              "                            website: { type: ['null', 'string'] }",
                              "                        }",
                              "                    }",
                              "                }",
                              "            },",
                              "        }",
                              "    }",
                              "};",
                              "",
                              "pm.test('Schema is valid', () => {",
                              "    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;",
                              "});",
                              ""
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/schools?schoolDistrictId=1302280&application=ag&disableCache={{disableCache}}&limit=5",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "schools"
                          ],
                          "query": [
                            {
                              "key": "schoolDistrictId",
                              "value": "1302280"
                            },
                            {
                              "key": "application",
                              "value": "ag"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            },
                            {
                              "key": "limit",
                              "value": "5"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Schools grouped by school type",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "773ae14a-762d-45b2-a008-b4fc63d100ac",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var schools = jsonData.entities.schools;",
                              "    var school = schools[0];",
                              "    ",
                              "    pm.expect(schools.length).to.be.gt(3);",
                              "    pm.expect(schools.length).to.be.lt(30);",
                              "    ",
                              "    pm.expect(school.hasOwnProperty('address')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRatingCount')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('districtIds')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('grade')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('greatSchoolsLink')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('id')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('milesToGeoCode')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('overallRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('phone')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('rectype')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('stateAbbrev')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('subtypes')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('type')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('zip')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/schools?lat=36.080300&lng=-80.174500&rad=30&application=ag&disableCache={{disableCache}}&limit=2&groupBy=schoolType",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "schools"
                          ],
                          "query": [
                            {
                              "key": "lat",
                              "value": "36.080300"
                            },
                            {
                              "key": "lng",
                              "value": "-80.174500"
                            },
                            {
                              "key": "rad",
                              "value": "30"
                            },
                            {
                              "key": "application",
                              "value": "ag"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            },
                            {
                              "key": "limit",
                              "value": "2"
                            },
                            {
                              "key": "groupBy",
                              "value": "schoolType"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Schools grouped by school type-NoLimit",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "773ae14a-762d-45b2-a008-b4fc63d100ac",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test (\"School counts returned based on the limit\", function () {",
                              "    const responseObject = pm.response.json();",
                              "    var schools = responseObject.entities.schools;",
                              "    var edLevelArray = schools.map(x => x.educationLevels);",
                              "    const Primary = (edLevelArray.join(\"\").match(/P/g)).length;",
                              "    const Middle = (edLevelArray.join(\"\").match(/M/g)).length;",
                              "    const High = (edLevelArray.join(\"\").match(/H/g)).length;",
                              "    pm.expect(Primary).to.be.eql(24);",
                              "    pm.expect(Middle).to.be.eql(24);",
                              "    pm.expect(High).to.be.eql(24);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/schools?lat=36.080300&lng=-80.174500&rad=30&application=ag&disableCache={{disableCache}}&limit=2&groupBy=schoolType",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "schools"
                          ],
                          "query": [
                            {
                              "key": "lat",
                              "value": "36.080300"
                            },
                            {
                              "key": "lng",
                              "value": "-80.174500"
                            },
                            {
                              "key": "rad",
                              "value": "30"
                            },
                            {
                              "key": "application",
                              "value": "ag"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            },
                            {
                              "key": "limit",
                              "value": "2"
                            },
                            {
                              "key": "groupBy",
                              "value": "schoolType"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Rent",
                  "item": [
                    {
                      "name": "Multiple Schools",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "c606cd11-9ab6-4be2-af18-59ddcc47235c",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var schools = jsonData.entities.schools;",
                              "    var school = schools[0];",
                              "    ",
                              "    pm.expect(schools.length).to.eq(3);",
                              "    ",
                              "    var districts = jsonData.entities.schoolDistricts;",
                              "    ",
                              "    pm.expect(school.hasOwnProperty('address')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRatingCount')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('districtIds')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('grade')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('greatSchoolsLink')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('id')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('milesToGeoCode')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('overallRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('phone')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('rectype')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('stateAbbrev')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('subtypes')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('type')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('zip')).to.be.true;",
                              "    ",
                              "    pm.expect(districts.hasOwnProperty('1302280')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/schools?schoolIds=130228002190,130228002493,130228002560&disableCache={{disableCache}}&application=rent",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "schools"
                          ],
                          "query": [
                            {
                              "key": "schoolIds",
                              "value": "130228002190,130228002493,130228002560"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            },
                            {
                              "key": "application",
                              "value": "rent"
                            }
                          ]
                        },
                        "description": "Lookup multiple schools by IDs."
                      },
                      "response": []
                    },
                    {
                      "name": "Multiple Schools- application, rectype etc",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d4858772-92c2-4d3e-adad-ea5f57f8d2f3",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var schools = jsonData.entities.schools;",
                              "    var school = schools[0];",
                              "    ",
                              "    pm.expect(schools.length).to.be.gt(3);",
                              "    ",
                              "    var districts = jsonData.districtsById;",
                              "",
                              "",
                              "    pm.expect(school.hasOwnProperty('endecaId')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('displayName')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('id')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('milesToGeoCode')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/schools?lat=36.080300&lng=-80.174500&rad=30&limit=30&application=rent&rectype=GEO&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "schools"
                          ],
                          "query": [
                            {
                              "key": "lat",
                              "value": "36.080300"
                            },
                            {
                              "key": "lng",
                              "value": "-80.174500"
                            },
                            {
                              "key": "rad",
                              "value": "30"
                            },
                            {
                              "key": "limit",
                              "value": "30"
                            },
                            {
                              "key": "application",
                              "value": "rent"
                            },
                            {
                              "key": "rectype",
                              "value": "GEO"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        },
                        "description": "Lookup multiple schools by IDs."
                      },
                      "response": []
                    },
                    {
                      "name": "School Route",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "64d74377-2a96-4e52-955f-223fc3c22e6d",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var schools = jsonData.entities.schools;",
                              "    var school = schools[0];",
                              "    ",
                              "    pm.expect(schools.length).to.be.gt(3);",
                              "    pm.expect(schools.length).to.be.lt(30);",
                              "    ",
                              "    pm.expect(school.hasOwnProperty('address')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRatingCount')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('districtIds')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('grade')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('greatSchoolsLink')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('id')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('milesToGeoCode')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('overallRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('phone')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('rectype')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('stateAbbrev')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('subtypes')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('type')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('zip')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/schools?lat=34.055900&lng=-84.17170&disableCache={{disableCache}}&application=rent",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "schools"
                          ],
                          "query": [
                            {
                              "key": "lat",
                              "value": "34.055900"
                            },
                            {
                              "key": "lng",
                              "value": "-84.17170"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            },
                            {
                              "key": "application",
                              "value": "rent"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Schools within a district",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b8d6b0cc-7e5d-46ff-9fa5-b521e6004efd",
                            "exec": [
                              "pm.test('Status code is 200', () => pm.response.to.have.status(200));",
                              "",
                              "const schema = {",
                              "    type: 'object',",
                              "    properties: {",
                              "            type: 'object',",
                              "            properties: {",
                              "                schools: {",
                              "                    type: 'array',",
                              "                    items: {",
                              "                        type: 'object',",
                              "                        properties: {",
                              "                            address: { type: 'string' },",
                              "                            averageRating: { type: ['null', 'string'] },",
                              "                            averageRatingCount: { type: ['null', 'string'] },",
                              "                            city: { type: 'string' },",
                              "                            districtIds: {",
                              "                                type: 'array',",
                              "                                items: { type: 'string' }",
                              "                            },",
                              "                            grade: { type: ['null', 'string'] },",
                              "                            greatSchoolsLink: { type: ['null', 'string'] },",
                              "                            id: { type: 'string' },",
                              "                            lat: { type: ['null', 'number'] },",
                              "                            lng: { type: ['null', 'number'] },",
                              "                            milesToGeoCode: { type: ['null', 'number'] },",
                              "                            name: { type: ['null', 'string'] },",
                              "                            overallRating: { type: ['null', 'string'] },",
                              "                            phone: { type: ['null', 'string'] },",
                              "                            rectype: { type: ['null', 'string'] },",
                              "                            stateAbbrev: { type: ['null', 'string'] },",
                              "                            subtypes: {",
                              "                                type: 'array',",
                              "                                items: { type: 'string' }",
                              "                            },",
                              "                            type: { type: ['null', 'string'] },",
                              "                            zip: { type: ['null', 'string'] }",
                              "                        }",
                              "                    }",
                              "                },",
                              "                schoolDistricts: {",
                              "                    type: 'object',",
                              "                    properties: {",
                              "                        1302280: { type: 'object' },",
                              "                        properties:{",
                              "                            description: { type: ['null', 'string'] },",
                              "                            id: { type: 'string' },",
                              "                            name: { type: ['null', 'string'] },",
                              "                            phone: { type: ['null', 'string'] },",
                              "                            website: { type: ['null', 'string'] }",
                              "                        }",
                              "                    }",
                              "                }",
                              "            },",
                              "    }",
                              "};",
                              "",
                              "pm.test('Schema is valid', () => {",
                              "    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/schools?schoolDistrictId=1302280&application=rent&disableCache={{disableCache}}&limit=5",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "schools"
                          ],
                          "query": [
                            {
                              "key": "schoolDistrictId",
                              "value": "1302280"
                            },
                            {
                              "key": "application",
                              "value": "rent"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            },
                            {
                              "key": "limit",
                              "value": "5"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Schools grouped by school type",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b6c376e2-9211-48ef-b4d5-d3db4bb20239",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var schools = jsonData.entities.schools;",
                              "    var school = schools[0];",
                              "    ",
                              "    pm.expect(schools.length).to.eq(6);",
                              "    ",
                              "    var districts = jsonData.entities.schoolDistricts;",
                              "    ",
                              "    pm.expect(school.hasOwnProperty('address')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRatingCount')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('districtIds')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('grade')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('greatSchoolsLink')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('id')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('milesToGeoCode')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('overallRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('phone')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('rectype')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('stateAbbrev')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('subtypes')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('type')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('zip')).to.be.true;",
                              "    ",
                              "    pm.expect(districts).to.not.be.undefined;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/schools?lat=36.080300&lng=-80.174500&rad=30&application=rent&disableCache={{disableCache}}&limit=2&groupBy=schoolType",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "schools"
                          ],
                          "query": [
                            {
                              "key": "lat",
                              "value": "36.080300"
                            },
                            {
                              "key": "lng",
                              "value": "-80.174500"
                            },
                            {
                              "key": "rad",
                              "value": "30"
                            },
                            {
                              "key": "application",
                              "value": "rent"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            },
                            {
                              "key": "limit",
                              "value": "2"
                            },
                            {
                              "key": "groupBy",
                              "value": "schoolType"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Schools grouped by school type-NoLimit",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "b6c376e2-9211-48ef-b4d5-d3db4bb20239",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test (\"School counts returned based on the limit\", function () {",
                              "    const responseObject = pm.response.json();",
                              "    var schools = responseObject.entities.schools;",
                              "    var edLevelArray = schools.map(x => x.educationLevels);",
                              "    const Primary = (edLevelArray.join(\"\").match(/P/g)).length;",
                              "    const Middle = (edLevelArray.join(\"\").match(/M/g)).length;",
                              "    const High = (edLevelArray.join(\"\").match(/H/g)).length;",
                              "    pm.expect(Primary).to.be.eql(24);",
                              "    pm.expect(Middle).to.be.eql(24);",
                              "    pm.expect(High).to.be.eql(24);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/schools?lat=36.080300&lng=-80.174500&rad=30&application=rent&disableCache={{disableCache}}&groupBy=schoolType",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "schools"
                          ],
                          "query": [
                            {
                              "key": "lat",
                              "value": "36.080300"
                            },
                            {
                              "key": "lng",
                              "value": "-80.174500"
                            },
                            {
                              "key": "rad",
                              "value": "30"
                            },
                            {
                              "key": "application",
                              "value": "rent"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            },
                            {
                              "key": "groupBy",
                              "value": "schoolType"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "name": "Rentals",
                  "item": [
                    {
                      "name": "Multiple Schools- with Bounding box",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "889a1092-a6b8-43a7-bb80-a8033a920db8",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var schools = jsonData.schools;",
                              "    var school = schools[0];",
                              "    ",
                              "    pm.expect(schools.length).to.eq(100);",
                              "    ",
                              "    var districts = jsonData.districtsById;",
                              "    ",
                              "    pm.expect(school.hasOwnProperty('address')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRatingCount')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('districtIds')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('grade')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('greatSchoolsLink')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('id')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('milesToGeoCode')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('overallRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('phone')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('rectype')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('stateAbbrev')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('subtypes')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('type')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('zip')).to.be.true;",
                              "    ",
                              "    pm.expect(districts.hasOwnProperty('0631320')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/schools?application=rentals&boundingBox=-118.849&boundingBox=33.565&boundingBox=-116.885&boundingBox=34.508&lat=34.036500000000004&limit=100&lng=-117.867&rad=100&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "schools"
                          ],
                          "query": [
                            {
                              "key": "application",
                              "value": "rentals"
                            },
                            {
                              "key": "boundingBox",
                              "value": "-118.849"
                            },
                            {
                              "key": "boundingBox",
                              "value": "33.565"
                            },
                            {
                              "key": "boundingBox",
                              "value": "-116.885"
                            },
                            {
                              "key": "boundingBox",
                              "value": "34.508"
                            },
                            {
                              "key": "lat",
                              "value": "34.036500000000004"
                            },
                            {
                              "key": "limit",
                              "value": "100"
                            },
                            {
                              "key": "lng",
                              "value": "-117.867"
                            },
                            {
                              "key": "rad",
                              "value": "100"
                            },
                            {
                              "key": "city",
                              "value": "Atlanta",
                              "disabled": true
                            },
                            {
                              "key": "state",
                              "value": "Georgia",
                              "disabled": true
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        },
                        "description": "Lookup schools by bounding box."
                      },
                      "response": []
                    },
                    {
                      "name": "Multiple Schools and applications",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "6d8b7e1a-b441-475a-9a99-6ae0380dd34e",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var schools = jsonData.schools;",
                              "    var school = schools[0];",
                              "    ",
                              "    pm.expect(schools.length).to.eq(3);",
                              "    ",
                              "    var districts = jsonData.districtsById;",
                              "    ",
                              "    pm.expect(school.hasOwnProperty('address')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRatingCount')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('districtIds')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('grade')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('greatSchoolsLink')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('id')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('milesToGeoCode')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('overallRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('phone')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('rectype')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('stateAbbrev')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('subtypes')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('type')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('zip')).to.be.true;",
                              "    ",
                              "    pm.expect(districts.hasOwnProperty('1302280')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/schools?schoolIds=130228002190,130228002493,130228002560&application=rentals&disableCache={{disableCache}}",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "schools"
                          ],
                          "query": [
                            {
                              "key": "schoolIds",
                              "value": "130228002190,130228002493,130228002560"
                            },
                            {
                              "key": "application",
                              "value": "rentals"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "School Route",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "64d74377-2a96-4e52-955f-223fc3c22e6d",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var schools = jsonData.schools;",
                              "    var school = schools[0];",
                              "    ",
                              "    pm.expect(schools.length).to.be.gt(3);",
                              "    pm.expect(schools.length).to.be.lt(30);",
                              "    ",
                              "    pm.expect(school.hasOwnProperty('address')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRatingCount')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('districtIds')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('grade')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('greatSchoolsLink')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('id')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('milesToGeoCode')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('overallRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('phone')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('rectype')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('stateAbbrev')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('subtypes')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('type')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('zip')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/schools?lat=34.055900&lng=-84.17170&disableCache={{disableCache}}&application=rentals",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "schools"
                          ],
                          "query": [
                            {
                              "key": "lat",
                              "value": "34.055900"
                            },
                            {
                              "key": "lng",
                              "value": "-84.17170"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            },
                            {
                              "key": "application",
                              "value": "rentals"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Schools within a district",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "791d87ff-4385-4108-b7ff-2e3b36588244",
                            "exec": [
                              "pm.test('Status code is 200', () => pm.response.to.have.status(200));",
                              "",
                              "const schema = {",
                              "    type: 'object',",
                              "    properties: {",
                              "            type: 'object',",
                              "            properties: {",
                              "                schools: {",
                              "                    type: 'array',",
                              "                    items: {",
                              "                        type: 'object',",
                              "                        properties: {",
                              "                            address: { type: 'string' },",
                              "                            averageRating: { type: ['null', 'string'] },",
                              "                            averageRatingCount: { type: ['null', 'string'] },",
                              "                            city: { type: 'string' },",
                              "                            districtIds: {",
                              "                                type: 'array',",
                              "                                items: { type: 'string' }",
                              "                            },",
                              "                            grade: { type: ['null', 'string'] },",
                              "                            greatSchoolsLink: { type: ['null', 'string'] },",
                              "                            id: { type: 'string' },",
                              "                            lat: { type: ['null', 'number'] },",
                              "                            lng: { type: ['null', 'number'] },",
                              "                            milesToGeoCode: { type: ['null', 'number'] },",
                              "                            name: { type: ['null', 'string'] },",
                              "                            overallRating: { type: ['null', 'string'] },",
                              "                            phone: { type: ['null', 'string'] },",
                              "                            rectype: { type: ['null', 'string'] },",
                              "                            stateAbbrev: { type: ['null', 'string'] },",
                              "                            subtypes: {",
                              "                                type: 'array',",
                              "                                items: { type: 'string' }",
                              "                            },",
                              "                            type: { type: ['null', 'string'] },",
                              "                            zip: { type: ['null', 'string'] }",
                              "                        }",
                              "                    }",
                              "                },",
                              "                schoolDistricts: {",
                              "                    type: 'object',",
                              "                    properties: {",
                              "                        1302280: { type: 'object' },",
                              "                        properties:{",
                              "                            description: { type: ['null', 'string'] },",
                              "                            id: { type: 'string' },",
                              "                            name: { type: ['null', 'string'] },",
                              "                            phone: { type: ['null', 'string'] },",
                              "                            website: { type: ['null', 'string'] }",
                              "                        }",
                              "                    }",
                              "                }",
                              "            },",
                              "    }",
                              "};",
                              "",
                              "pm.test('Schema is valid', () => {",
                              "    pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/schools?schoolDistrictId=1302280&application=rentals&disableCache={{disableCache}}&limit=5",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "schools"
                          ],
                          "query": [
                            {
                              "key": "schoolDistrictId",
                              "value": "1302280"
                            },
                            {
                              "key": "application",
                              "value": "rentals"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            },
                            {
                              "key": "limit",
                              "value": "5"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Schools grouped by school type",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "61030c81-5b18-48f9-a086-bbce3d4920b8",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"body is properly formatted\", function () {",
                              "    var jsonData = pm.response.json();",
                              "    ",
                              "    var schools = jsonData.entities.schools;",
                              "    var school = schools[0];",
                              "    ",
                              "    pm.expect(schools.length).to.eq(6);",
                              "    ",
                              "    var districts = jsonData.districtsById;",
                              "    ",
                              "    pm.expect(school.hasOwnProperty('address')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('averageRatingCount')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('city')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('districtIds')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('grade')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('greatSchoolsLink')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('id')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lat')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('lng')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('milesToGeoCode')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('name')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('overallRating')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('phone')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('rectype')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('stateAbbrev')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('subtypes')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('type')).to.be.true;",
                              "    pm.expect(school.hasOwnProperty('zip')).to.be.true;",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/schools?lat=36.080300&lng=-80.174500&rad=30&application=rentals&disableCache={{disableCache}}&limit=2&groupBy=schoolType",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "schools"
                          ],
                          "query": [
                            {
                              "key": "lat",
                              "value": "36.080300"
                            },
                            {
                              "key": "lng",
                              "value": "-80.174500"
                            },
                            {
                              "key": "rad",
                              "value": "30"
                            },
                            {
                              "key": "application",
                              "value": "rentals"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            },
                            {
                              "key": "limit",
                              "value": "2"
                            },
                            {
                              "key": "groupBy",
                              "value": "schoolType"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Schools grouped by school type-NoLimit",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "61030c81-5b18-48f9-a086-bbce3d4920b8",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test (\"School counts returned based on the limit\", function () {",
                              "    const responseObject = pm.response.json();",
                              "    var schools = responseObject.entities.schools;",
                              "    var edLevelArray = schools.map(x => x.educationLevels);",
                              "    const Primary = (edLevelArray.join(\"\").match(/P/g)).length;",
                              "    const Middle = (edLevelArray.join(\"\").match(/M/g)).length;",
                              "    const High = (edLevelArray.join(\"\").match(/H/g)).length;",
                              "    pm.expect(Primary).to.be.eql(24);",
                              "    pm.expect(Middle).to.be.eql(24);",
                              "    pm.expect(High).to.be.eql(24);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                          "mode": "raw",
                          "raw": ""
                        },
                        "url": {
                          "raw": "http://{{services_meta_host}}/v3/schools?lat=36.080300&lng=-80.174500&rad=30&application=rentals&disableCache={{disableCache}}&groupBy=schoolType",
                          "protocol": "http",
                          "host": [
                            "{{services_meta_host}}"
                          ],
                          "path": [
                            "v3",
                            "schools"
                          ],
                          "query": [
                            {
                              "key": "lat",
                              "value": "36.080300"
                            },
                            {
                              "key": "lng",
                              "value": "-80.174500"
                            },
                            {
                              "key": "rad",
                              "value": "30"
                            },
                            {
                              "key": "application",
                              "value": "rentals"
                            },
                            {
                              "key": "disableCache",
                              "value": "{{disableCache}}"
                            },
                            {
                              "key": "groupBy",
                              "value": "schoolType"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "description": "Requests for school routes.",
              "_postman_isSubFolder": true
            },
            {
              "name": "Geo cities/zip/search Routes for Moving form (zipcode.json not included as per management)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "590d5710-65a6-4a58-b96f-7458bb5538d5",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"body is properly formatted\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    ",
                      "    var city = jsonData[0];",
                      "    ",
                      "    pm.expect(jsonData.length).to.be.gt(3);",
                      "    ",
                      "    pm.expect(city).to.be.eq('Abbeville');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "http://{{services_meta_host}}/v3/geo/Georgia/cities.json?disableCache={{disableCache}}",
                  "protocol": "http",
                  "host": [
                    "{{services_meta_host}}"
                  ],
                  "path": [
                    "v3",
                    "geo",
                    "Georgia",
                    "cities.json"
                  ],
                  "query": [
                    {
                      "key": "disableCache",
                      "value": "{{disableCache}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Cities",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fa2c6b90-bbe0-4626-a953-b04b78d72619",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"body is properly formatted\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    ",
                      "    var city = jsonData[0];",
                      "    ",
                      "    pm.expect(jsonData.length).to.be.gt(3);",
                      "    ",
                      "    pm.expect(city).to.be.eq('Abbyville');",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "http://{{services_meta_host}}/v3/geo/KS/cities.json?disableCache={{disableCache}}",
                  "protocol": "http",
                  "host": [
                    "{{services_meta_host}}"
                  ],
                  "path": [
                    "v3",
                    "geo",
                    "KS",
                    "cities.json"
                  ],
                  "query": [
                    {
                      "key": "disableCache",
                      "value": "{{disableCache}}"
                    }
                  ]
                },
                "description": "List of cities by state."
              },
              "response": []
            },
            {
              "name": "Current location (Geo Header)",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "62380eff-b01a-417c-8d5e-3ba6a11c7521",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"body is properly formatted\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    ",
                      "    var search = jsonData.search;",
                      "    var location = jsonData.location;",
                      "    ",
                      "    pm.expect(search.hasOwnProperty('endecaId')).to.be.true;",
                      "    pm.expect(search.hasOwnProperty('lat')).to.be.true;",
                      "    pm.expect(search.hasOwnProperty('lng')).to.be.true;",
                      "    pm.expect(search.hasOwnProperty('pageSize')).to.be.true;",
                      "    pm.expect(search.hasOwnProperty('path')).to.be.true;",
                      "    pm.expect(search.hasOwnProperty('resultsMatchQuery')).to.be.true;",
                      "    pm.expect(search.hasOwnProperty('searchCityState')).to.be.true;",
                      "    pm.expect(search.hasOwnProperty('type')).to.be.true;",
                      "    ",
                      "    pm.expect(location.hasOwnProperty('isIndexable')).to.be.true;",
                      "    pm.expect(location.hasOwnProperty('geoId')).to.be.true;",
                      "    pm.expect(location.hasOwnProperty('name')).to.be.true;",
                      "    pm.expect(location.hasOwnProperty('marketCodes')).to.be.true;",
                      "    pm.expect(location.hasOwnProperty('city')).to.be.true;",
                      "    pm.expect(location.hasOwnProperty('state')).to.be.true;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "X-Geo-Data",
                    "value": "city=Norcross,region=GA,country=US,lat=33.9411,long=-84.2136,metro=909,msa=9009,zip=30092,areacode=770,pmsa=1234,cbsa=12060",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "http://{{services_meta_host}}/v3/geo?disableCache={{disableCache}}",
                  "protocol": "http",
                  "host": [
                    "{{services_meta_host}}"
                  ],
                  "path": [
                    "v3",
                    "geo"
                  ],
                  "query": [
                    {
                      "key": "disableCache",
                      "value": "{{disableCache}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Popular cities route",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ceb99789-fced-4e06-ab86-0cf3ecdad327",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"body is properly formatted\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    ",
                      "    var city = jsonData[0];",
                      "    ",
                      "    pm.expect(jsonData.length).to.be.gt(3);",
                      "    ",
                      "    pm.expect(city.hasOwnProperty('city')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('count')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('display_name')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('state')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('url')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('display_city')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('display_state')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('submarket_nb')).to.be.true;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "http://{{services_meta_host}}/v3/popular_cities?lat=37.9708&lng=-98.2039&rad=30.0&state=kansas&submarket_nb=15009&limit=70&application=rent&disableCache={{disableCache}}",
                  "protocol": "http",
                  "host": [
                    "{{services_meta_host}}"
                  ],
                  "path": [
                    "v3",
                    "popular_cities"
                  ],
                  "query": [
                    {
                      "key": "lat",
                      "value": "37.9708"
                    },
                    {
                      "key": "lng",
                      "value": "-98.2039"
                    },
                    {
                      "key": "rad",
                      "value": "30.0"
                    },
                    {
                      "key": "state",
                      "value": "kansas"
                    },
                    {
                      "key": "submarket_nb",
                      "value": "15009"
                    },
                    {
                      "key": "limit",
                      "value": "70"
                    },
                    {
                      "key": "application",
                      "value": "rent"
                    },
                    {
                      "key": "disableCache",
                      "value": "{{disableCache}}"
                    }
                  ]
                },
                "description": "Lookup popular cities by geocode."
              },
              "response": []
            }
          ],
          "description": "Elastic Search for GEO (Note: v2/geo and ag? it’s not supported, we added a something, but it’s not what ag team will need at the end only rent.js and rentals.js can access them).",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "cad5b24b-8df8-46a2-9dcc-a8590a96c755",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "4d957526-cfc8-4fbc-83f5-49bc5b56b0df",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Nearby",
          "item": [
            {
              "name": "AG",
              "item": [
                {
                  "name": "Nearby Colleges",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c3fe443e-c3ac-4a9d-bbae-9cb071a99556",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "",
                          "pm.test(\"body is properly formatted\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    ",
                          "    pm.expect(jsonData.nearby_list.length).to.be.above(1);",
                          "    ",
                          "    var hood = jsonData.nearby_list[0];",
                          "    ",
                          "    pm.expect(hood.hasOwnProperty('city')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('count')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('num_listings')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('display_city')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('display_name')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('display_state')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('name')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('state')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('url')).to.be.true;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "http://{{services_meta_host}}/v3/nearby_colleges?limit=5&state=Colorado&city=Denver&application=ag&disableCache={{disableCache}}",
                      "protocol": "http",
                      "host": [
                        "{{services_meta_host}}"
                      ],
                      "path": [
                        "v3",
                        "nearby_colleges"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "5"
                        },
                        {
                          "key": "state",
                          "value": "Colorado"
                        },
                        {
                          "key": "city",
                          "value": "Denver"
                        },
                        {
                          "key": "application",
                          "value": "ag"
                        },
                        {
                          "key": "disableCache",
                          "value": "{{disableCache}}"
                        }
                      ]
                    },
                    "description": "Lookup nearby colleges by geocode or state and city."
                  },
                  "response": []
                },
                {
                  "name": "Nearby Neighborhoods",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7ce80b49-6dd4-470a-9e13-0535309d9bff",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "",
                          "pm.test(\"body is properly formatted\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    ",
                          "    pm.expect(jsonData.nearby_list.length).to.be.above(1);",
                          "    ",
                          "    var hood = jsonData.nearby_list[0];",
                          "    ",
                          "    pm.expect(hood.hasOwnProperty('city')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('count')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('display_city')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('display_neighborhood')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('display_state')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('neighborhood')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('state')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('url')).to.be.true;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "http://{{services_meta_host}}/v3/nearby_neighborhoods?lat=38.6781&lng=-121.175&rad=10.0&state=california&city=folsom&submarket_nb=719&query_type=sitemap&application=ag&disableCache={{disableCache}}",
                      "protocol": "http",
                      "host": [
                        "{{services_meta_host}}"
                      ],
                      "path": [
                        "v3",
                        "nearby_neighborhoods"
                      ],
                      "query": [
                        {
                          "key": "lat",
                          "value": "38.6781"
                        },
                        {
                          "key": "lng",
                          "value": "-121.175"
                        },
                        {
                          "key": "rad",
                          "value": "10.0"
                        },
                        {
                          "key": "state",
                          "value": "california"
                        },
                        {
                          "key": "city",
                          "value": "folsom"
                        },
                        {
                          "key": "submarket_nb",
                          "value": "719"
                        },
                        {
                          "key": "query_type",
                          "value": "sitemap"
                        },
                        {
                          "key": "application",
                          "value": "ag"
                        },
                        {
                          "key": "disableCache",
                          "value": "{{disableCache}}"
                        }
                      ]
                    },
                    "description": "Lookup nearby neighborhoods by geocode or state and city."
                  },
                  "response": []
                },
                {
                  "name": "Nearby",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "http://{{services_meta_host}}/v3/nearby?application=ag&lat=33.9236&limit=30&lng=-84.8408&min_num_listings=2&property_type=apartments&rad=20&disableCache={{disableCache}}",
                      "protocol": "http",
                      "host": [
                        "{{services_meta_host}}"
                      ],
                      "path": [
                        "v3",
                        "nearby"
                      ],
                      "query": [
                        {
                          "key": "application",
                          "value": "ag"
                        },
                        {
                          "key": "lat",
                          "value": "33.9236"
                        },
                        {
                          "key": "limit",
                          "value": "30"
                        },
                        {
                          "key": "lng",
                          "value": "-84.8408"
                        },
                        {
                          "key": "min_num_listings",
                          "value": "2"
                        },
                        {
                          "key": "property_type",
                          "value": "apartments"
                        },
                        {
                          "key": "rad",
                          "value": "20"
                        },
                        {
                          "key": "disableCache",
                          "value": "{{disableCache}}"
                        }
                      ]
                    },
                    "description": "Lookup nearby colleges, neighborhoods, and military bases by geocode."
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "name": "Rent",
              "item": [
                {
                  "name": "Nearby Colleges",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c3fe443e-c3ac-4a9d-bbae-9cb071a99556",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "",
                          "pm.test(\"body is properly formatted\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    ",
                          "    pm.expect(jsonData.nearby_list.length).to.be.above(1);",
                          "    ",
                          "    var hood = jsonData.nearby_list[0];",
                          "    ",
                          "    pm.expect(hood.hasOwnProperty('city')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('count')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('display_city')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('display_name')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('display_state')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('state')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('url')).to.be.true;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "http://{{services_meta_host}}/v3/nearby_colleges?limit=5&state=Colorado&city=Denver&application=rent&disableCache={{disableCache}}",
                      "protocol": "http",
                      "host": [
                        "{{services_meta_host}}"
                      ],
                      "path": [
                        "v3",
                        "nearby_colleges"
                      ],
                      "query": [
                        {
                          "key": "limit",
                          "value": "5"
                        },
                        {
                          "key": "state",
                          "value": "Colorado"
                        },
                        {
                          "key": "city",
                          "value": "Denver"
                        },
                        {
                          "key": "application",
                          "value": "rent"
                        },
                        {
                          "key": "disableCache",
                          "value": "{{disableCache}}"
                        }
                      ]
                    },
                    "description": "Lookup nearby colleges by geocode or state and city."
                  },
                  "response": []
                },
                {
                  "name": "Nearby Neighborhoods",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7ce80b49-6dd4-470a-9e13-0535309d9bff",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "",
                          "pm.test(\"body is properly formatted\", function () {",
                          "    var jsonData = pm.response.json();",
                          "    ",
                          "    pm.expect(jsonData.nearby_list.length).to.be.above(1);",
                          "    ",
                          "    var hood = jsonData.nearby_list[0];",
                          "    ",
                          "    pm.expect(hood.hasOwnProperty('city')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('count')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('display_city')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('display_neighborhood')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('display_state')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('neighborhood')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('state')).to.be.true;",
                          "    pm.expect(hood.hasOwnProperty('url')).to.be.true;",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "http://{{services_meta_host}}/v3/nearby_neighborhoods?lat=38.6781&lng=-121.175&rad=10.0&state=california&city=folsom&submarket_nb=719&query_type=sitemap&application=rent&disableCache={{disableCache}}",
                      "protocol": "http",
                      "host": [
                        "{{services_meta_host}}"
                      ],
                      "path": [
                        "v3",
                        "nearby_neighborhoods"
                      ],
                      "query": [
                        {
                          "key": "lat",
                          "value": "38.6781"
                        },
                        {
                          "key": "lng",
                          "value": "-121.175"
                        },
                        {
                          "key": "rad",
                          "value": "10.0"
                        },
                        {
                          "key": "state",
                          "value": "california"
                        },
                        {
                          "key": "city",
                          "value": "folsom"
                        },
                        {
                          "key": "submarket_nb",
                          "value": "719"
                        },
                        {
                          "key": "query_type",
                          "value": "sitemap"
                        },
                        {
                          "key": "application",
                          "value": "rent"
                        },
                        {
                          "key": "disableCache",
                          "value": "{{disableCache}}"
                        }
                      ]
                    },
                    "description": "Lookup nearby neighborhoods by geocode or state and city."
                  },
                  "response": []
                },
                {
                  "name": "Nearby",
                  "request": {
                    "method": "GET",
                    "header": [],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "http://{{services_meta_host}}/v3/nearby?application=rent&lat=33.9236&limit=30&lng=-84.8408&min_num_listings=2&property_type=apartments&rad=20&disableCache={{disableCache}}",
                      "protocol": "http",
                      "host": [
                        "{{services_meta_host}}"
                      ],
                      "path": [
                        "v3",
                        "nearby"
                      ],
                      "query": [
                        {
                          "key": "application",
                          "value": "rent"
                        },
                        {
                          "key": "lat",
                          "value": "33.9236"
                        },
                        {
                          "key": "limit",
                          "value": "30"
                        },
                        {
                          "key": "lng",
                          "value": "-84.8408"
                        },
                        {
                          "key": "min_num_listings",
                          "value": "2"
                        },
                        {
                          "key": "property_type",
                          "value": "apartments"
                        },
                        {
                          "key": "rad",
                          "value": "20"
                        },
                        {
                          "key": "disableCache",
                          "value": "{{disableCache}}"
                        }
                      ]
                    },
                    "description": "Lookup nearby colleges, neighborhoods, and military bases by geocode."
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "86280499-cce1-45c6-8141-8c30809bb0a4",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "7c2f0241-9a9f-4cb5-bf89-45ed82247f2f",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "General/Misc.",
          "item": [
            {
              "name": "Military Bases",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f621dbd1-2000-43b4-92a5-e8fa5215e883",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "",
                      "pm.test(\"body is properly formatted\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    ",
                      "    pm.expect(jsonData.nearby_list.length).to.be.above(1);",
                      "    ",
                      "    var base = jsonData.nearby_list[0];",
                      "    ",
                      "    pm.expect(base.hasOwnProperty('city')).to.be.true;",
                      "    pm.expect(base.hasOwnProperty('display_name')).to.be.true;",
                      "    pm.expect(base.hasOwnProperty('name')).to.be.true;",
                      "    pm.expect(base.hasOwnProperty('state')).to.be.true;",
                      "    pm.expect(base.hasOwnProperty('url')).to.be.true;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "http://{{services_meta_host}}/v3/military_bases?state=California&channel=military&application=ag&disableCache={{disableCache}}",
                  "protocol": "http",
                  "host": [
                    "{{services_meta_host}}"
                  ],
                  "path": [
                    "v3",
                    "military_bases"
                  ],
                  "query": [
                    {
                      "key": "state",
                      "value": "California"
                    },
                    {
                      "key": "channel",
                      "value": "military"
                    },
                    {
                      "key": "application",
                      "value": "ag"
                    },
                    {
                      "key": "disableCache",
                      "value": "{{disableCache}}"
                    }
                  ]
                },
                "description": "Lookup colleges by geocode or state and city."
              },
              "response": []
            },
            {
              "name": "Colleges By State",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "25a79dba-52fd-48b6-ae03-5259695100a3",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "",
                      "pm.test(\"body is properly formatted\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    ",
                      "    pm.expect(jsonData.results.length).to.be.above(1);",
                      "    ",
                      "    var college = jsonData.results[0];",
                      "    ",
                      "    pm.expect(college.hasOwnProperty('city')).to.be.true;",
                      "    pm.expect(college.hasOwnProperty('display_name')).to.be.true;",
                      "    pm.expect(college.hasOwnProperty('state')).to.be.true;",
                      "    pm.expect(college.hasOwnProperty('url')).to.be.true;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "http://{{services_meta_host}}/v3/colleges?city=Los-Angeles&state=California&application=rent&disableCache={{disableCache}}",
                  "protocol": "http",
                  "host": [
                    "{{services_meta_host}}"
                  ],
                  "path": [
                    "v3",
                    "colleges"
                  ],
                  "query": [
                    {
                      "key": "city",
                      "value": "Los-Angeles",
                      "description": "Hyphenated city to use for the colleges lookup."
                    },
                    {
                      "key": "state",
                      "value": "California"
                    },
                    {
                      "key": "application",
                      "value": "rent"
                    },
                    {
                      "key": "disableCache",
                      "value": "{{disableCache}}"
                    }
                  ]
                },
                "description": "Lookup colleges by state."
              },
              "response": []
            },
            {
              "name": "Nearby Cities",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "970de738-0716-43b0-a65b-e8d507f6b2a5",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "",
                      "pm.test(\"body is properly formatted\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    ",
                      "    pm.expect(jsonData.nearby_list.length).to.be.above(1);",
                      "    ",
                      "    var city = jsonData.nearby_list[0];",
                      "    ",
                      "    pm.expect(city.hasOwnProperty('city')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('count')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('display_city')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('display_name')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('display_state')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('state')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('submarket_nb')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('url')).to.be.true;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "http://{{services_meta_host}}/v3/nearby_cities?lat=26.4378&lng=-81.8069&rad=20.0&state=florida&city=estero&submarket_nb=2178&application=rent&disableCache={{disableCache}}",
                  "protocol": "http",
                  "host": [
                    "{{services_meta_host}}"
                  ],
                  "path": [
                    "v3",
                    "nearby_cities"
                  ],
                  "query": [
                    {
                      "key": "lat",
                      "value": "26.4378"
                    },
                    {
                      "key": "lng",
                      "value": "-81.8069"
                    },
                    {
                      "key": "rad",
                      "value": "20.0"
                    },
                    {
                      "key": "state",
                      "value": "florida"
                    },
                    {
                      "key": "city",
                      "value": "estero"
                    },
                    {
                      "key": "submarket_nb",
                      "value": "2178"
                    },
                    {
                      "key": "application",
                      "value": "rent"
                    },
                    {
                      "key": "disableCache",
                      "value": "{{disableCache}}"
                    }
                  ]
                },
                "description": "Lookup nearby cities by geocode"
              },
              "response": []
            },
            {
              "name": "Nearby Zips",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "dc53aade-e3dc-4620-b62a-ddeeea827b70",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "",
                      "pm.test(\"body is properly formatted\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    ",
                      "    pm.expect(jsonData.nearby_list.length).to.be.above(1);",
                      "    ",
                      "    var zip = jsonData.nearby_list[0];",
                      "    ",
                      "    pm.expect(zip.hasOwnProperty('city')).to.be.true;",
                      "    pm.expect(zip.hasOwnProperty('count')).to.be.true;",
                      "    pm.expect(zip.hasOwnProperty('display_city')).to.be.true;",
                      "    pm.expect(zip.hasOwnProperty('display_name')).to.be.true;",
                      "    pm.expect(zip.hasOwnProperty('display_state')).to.be.true;",
                      "    pm.expect(zip.hasOwnProperty('state')).to.be.true;",
                      "    pm.expect(zip.hasOwnProperty('url')).to.be.true;",
                      "    pm.expect(zip.hasOwnProperty('zip')).to.be.true;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "http://{{services_meta_host}}/v3/nearby_zips?city=atlanta&state=GA&disableCache={{disableCache}}",
                  "protocol": "http",
                  "host": [
                    "{{services_meta_host}}"
                  ],
                  "path": [
                    "v3",
                    "nearby_zips"
                  ],
                  "query": [
                    {
                      "key": "city",
                      "value": "atlanta"
                    },
                    {
                      "key": "state",
                      "value": "GA"
                    },
                    {
                      "key": "disableCache",
                      "value": "{{disableCache}}"
                    }
                  ]
                },
                "description": "Lookup nearby Zipcodes by Geocode."
              },
              "response": []
            },
            {
              "name": "Popular Cities",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1399d37c-12ae-411a-9e06-c995c4c696fd",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "",
                      "pm.test(\"body is properly formatted\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    ",
                      "    pm.expect(jsonData.length).to.be.above(1);",
                      "    ",
                      "    var city = jsonData[0];",
                      "    ",
                      "    pm.expect(city.hasOwnProperty('city')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('count')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('display_name')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('display_city')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('display_state')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('state')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('url')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('state')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('url')).to.be.true;",
                      "    pm.expect(city.hasOwnProperty('submarket_nb')).to.be.true;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "http://{{services_meta_host}}/v3/popular_cities?lat=37.9708&lng=-98.2039&rad=30.0&state=kansas&submarket_nb=15009&limit=70&application=rent&disableCache={{disableCache}}",
                  "protocol": "http",
                  "host": [
                    "{{services_meta_host}}"
                  ],
                  "path": [
                    "v3",
                    "popular_cities"
                  ],
                  "query": [
                    {
                      "key": "lat",
                      "value": "37.9708"
                    },
                    {
                      "key": "lng",
                      "value": "-98.2039"
                    },
                    {
                      "key": "rad",
                      "value": "30.0"
                    },
                    {
                      "key": "state",
                      "value": "kansas"
                    },
                    {
                      "key": "submarket_nb",
                      "value": "15009"
                    },
                    {
                      "key": "limit",
                      "value": "70"
                    },
                    {
                      "key": "application",
                      "value": "rent"
                    },
                    {
                      "key": "disableCache",
                      "value": "{{disableCache}}"
                    }
                  ]
                },
                "description": "Lookup popular cities by state."
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "Admin",
          "item": [
            {
              "name": "Flush Cache",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fda44c13-f81d-4db1-8367-7761d94c32c1",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"body is properly formatted\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    ",
                      "    var meta = jsonData.meta;",
                      "",
                      "    pm.expect(meta.hasOwnProperty('pid')).to.be.true;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "http://{{services_meta_host}}/v3/admin/flush-cache",
                  "protocol": "http",
                  "host": [
                    "{{services_meta_host}}"
                  ],
                  "path": [
                    "v3",
                    "admin",
                    "flush-cache"
                  ]
                },
                "description": "/v3/admin/flush-cache/"
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "name": "V2",
      "item": [
        {
          "name": "/geo search by school- Single school (v2/geo only & only single school)-628699583",
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "http://{{services_meta_host}}/v2/geo?application=rent&schoolId=130270002083&disableCache={{disableCache}}",
              "protocol": "http",
              "host": [
                "{{services_meta_host}}"
              ],
              "path": [
                "v2",
                "geo"
              ],
              "query": [
                {
                  "key": "application",
                  "value": "rent"
                },
                {
                  "key": "city",
                  "value": "Atlanta",
                  "disabled": true
                },
                {
                  "key": "state",
                  "value": "Georgia",
                  "disabled": true
                },
                {
                  "key": "schoolId",
                  "value": "130270002083"
                },
                {
                  "key": "disableCache",
                  "value": "{{disableCache}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "/schools search by school- Multiple school",
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "http://{{services_meta_host}}/v2/schools?application=rent&schoolIds=130228002190,130228002493,130228002560&disableCache={{disableCache}}",
              "protocol": "http",
              "host": [
                "{{services_meta_host}}"
              ],
              "path": [
                "v2",
                "schools"
              ],
              "query": [
                {
                  "key": "application",
                  "value": "rent"
                },
                {
                  "key": "city",
                  "value": "Atlanta",
                  "disabled": true
                },
                {
                  "key": "state",
                  "value": "Georgia",
                  "disabled": true
                },
                {
                  "key": "schoolIds",
                  "value": "130228002190,130228002493,130228002560"
                },
                {
                  "key": "disableCache",
                  "value": "{{disableCache}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "/schools search by school- Multiple school (For useast2 example)",
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "http://{{services_meta_host}}/v2/schools?schoolIds=130228002190,130228002493,130228002560&disableCache={{disableCache}}",
              "protocol": "http",
              "host": [
                "{{services_meta_host}}"
              ],
              "path": [
                "v2",
                "schools"
              ],
              "query": [
                {
                  "key": "application",
                  "value": "rentals",
                  "disabled": true
                },
                {
                  "key": "city",
                  "value": "Atlanta",
                  "disabled": true
                },
                {
                  "key": "state",
                  "value": "Georgia",
                  "disabled": true
                },
                {
                  "key": "schoolIds",
                  "value": "130228002190,130228002493,130228002560"
                },
                {
                  "key": "disableCache",
                  "value": "{{disableCache}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Include all schools in School Search API when search by geocode",
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "http://{{services_meta_host}}/v2/schools?lat=34.0514&lng=-84.0714&rad=10&limit=100&disableCache={{disableCache}}",
              "protocol": "http",
              "host": [
                "{{services_meta_host}}"
              ],
              "path": [
                "v2",
                "schools"
              ],
              "query": [
                {
                  "key": "lat",
                  "value": "34.0514"
                },
                {
                  "key": "lng",
                  "value": "-84.0714"
                },
                {
                  "key": "rad",
                  "value": "10"
                },
                {
                  "key": "limit",
                  "value": "100"
                },
                {
                  "key": "application",
                  "value": "rentals",
                  "disabled": true
                },
                {
                  "key": "city",
                  "value": "Atlanta",
                  "disabled": true
                },
                {
                  "key": "state",
                  "value": "Georgia",
                  "disabled": true
                },
                {
                  "key": "disableCache",
                  "value": "{{disableCache}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Show the \"direction\":\"desc\" key/val on the sort key if the g_sortfield Endeca field is available in the response.",
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "http://{{services_meta_host}}/v2/geo?application=rentals&city=atlanta&state=georgia&disableCache={{disableCache}}",
              "protocol": "http",
              "host": [
                "{{services_meta_host}}"
              ],
              "path": [
                "v2",
                "geo"
              ],
              "query": [
                {
                  "key": "application",
                  "value": "rentals"
                },
                {
                  "key": "city",
                  "value": "atlanta"
                },
                {
                  "key": "state",
                  "value": "georgia"
                },
                {
                  "key": "disableCache",
                  "value": "{{disableCache}}"
                },
                {
                  "key": "limit",
                  "value": "100",
                  "disabled": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Rentals: New School Search route by geocode for rectype:GEO (working for AG and rent)",
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "http://{{services_meta_host}}/v2/schools?lat=36.080300&lng=-80.174500&rad=30&limit=30&application=rent&rectype=GEO&disableCache={{disableCache}}",
              "protocol": "http",
              "host": [
                "{{services_meta_host}}"
              ],
              "path": [
                "v2",
                "schools"
              ],
              "query": [
                {
                  "key": "lat",
                  "value": "36.080300"
                },
                {
                  "key": "lng",
                  "value": "-80.174500"
                },
                {
                  "key": "rad",
                  "value": "30"
                },
                {
                  "key": "limit",
                  "value": "30"
                },
                {
                  "key": "application",
                  "value": "rent"
                },
                {
                  "key": "rectype",
                  "value": "GEO"
                },
                {
                  "key": "disableCache",
                  "value": "{{disableCache}}"
                }
              ]
            }
          },
          "response": []
        }
      ],
      "description": "Version 2 requests."
    },
    {
      "name": "V1",
      "item": [
        {
          "name": "Nearby",
          "item": [
            {
              "name": "Nearby - no location",
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "http://{{services_meta_host}}/nearby?application=rent&limit=30&min_num_listings=2&property_type=apartments&disableCache={{disableCache}}",
                  "protocol": "http",
                  "host": [
                    "{{services_meta_host}}"
                  ],
                  "path": [
                    "nearby"
                  ],
                  "query": [
                    {
                      "key": "application",
                      "value": "rent"
                    },
                    {
                      "key": "limit",
                      "value": "30"
                    },
                    {
                      "key": "min_num_listings",
                      "value": "2"
                    },
                    {
                      "key": "property_type",
                      "value": "apartments"
                    },
                    {
                      "key": "disableCache",
                      "value": "{{disableCache}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Nearby - lat and lng",
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "http://{{services_meta_host}}/nearby?application=rent&limit=30&min_num_listings=2&property_type=apartments&disableCache={{disableCache}}",
                  "protocol": "http",
                  "host": [
                    "{{services_meta_host}}"
                  ],
                  "path": [
                    "nearby"
                  ],
                  "query": [
                    {
                      "key": "application",
                      "value": "rent"
                    },
                    {
                      "key": "limit",
                      "value": "30"
                    },
                    {
                      "key": "min_num_listings",
                      "value": "2"
                    },
                    {
                      "key": "property_type",
                      "value": "apartments"
                    },
                    {
                      "key": "disableCache",
                      "value": "{{disableCache}}"
                    }
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Nearby - city and state",
              "request": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "http://{{services_meta_host}}/nearby?application=rent&limit=30&min_num_listings=2&property_type=apartments&disableCache={{disableCache}}&city=Smyrna&state=GA",
                  "protocol": "http",
                  "host": [
                    "{{services_meta_host}}"
                  ],
                  "path": [
                    "nearby"
                  ],
                  "query": [
                    {
                      "key": "application",
                      "value": "rent"
                    },
                    {
                      "key": "limit",
                      "value": "30"
                    },
                    {
                      "key": "min_num_listings",
                      "value": "2"
                    },
                    {
                      "key": "property_type",
                      "value": "apartments"
                    },
                    {
                      "key": "disableCache",
                      "value": "{{disableCache}}"
                    },
                    {
                      "key": "city",
                      "value": "Smyrna"
                    },
                    {
                      "key": "state",
                      "value": "GA"
                    }
                  ]
                }
              },
              "response": []
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "name": "/geo `Nr=NOT(searchpath:SCHOOL)`-625338673",
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "http://{{services_meta_host}}/geo?application=rent&lat=36.080300&lng=-80.174500&disableCache={{disableCache}}",
              "protocol": "http",
              "host": [
                "{{services_meta_host}}"
              ],
              "path": [
                "geo"
              ],
              "query": [
                {
                  "key": "application",
                  "value": "rent"
                },
                {
                  "key": "city",
                  "value": "Atlanta",
                  "disabled": true
                },
                {
                  "key": "state",
                  "value": "Georgia",
                  "disabled": true
                },
                {
                  "key": "lat",
                  "value": "36.080300"
                },
                {
                  "key": "lng",
                  "value": "-80.174500"
                },
                {
                  "key": "disableCache",
                  "value": "{{disableCache}}"
                }
              ]
            }
          },
          "response": []
        }
      ],
      "description": "Version 1 requests."
    },
    {
      "name": "Current location",
      "request": {
        "method": "GET",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "https://www.qa.apartmentguide.com/meta/geo",
          "protocol": "https",
          "host": [
            "www",
            "qa",
            "apartmentguide",
            "com"
          ],
          "path": [
            "meta",
            "geo"
          ]
        }
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "a9520086-43bd-4171-b88a-240c543c543f",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "3aabd3dd-9784-45c1-9200-a3cbf6618cc6",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "id": "a5a5a342-f3d7-4684-b6a4-f2979b4a099a",
      "key": "disableCache",
      "value": "false",
      "type": "string"
    }
  ]
}